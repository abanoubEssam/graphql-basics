type Booking {
	_id: ID!
	event: Event!
	user: User!
	createdAt: String!
	updatedAt: String!
}
type Event {
	_id: ID!
	title: String!
	description: String!
	price: Float!
	date: String!
	creator: User!
	# bookings: [Booking]
}
type User {
	_id: ID!
	email: String!
	password: String
	createdEvents: [Event]
}
input UserInput {
	email: String!
	password: String!
}
input BookingInput {
	eventId: ID!
	userId: ID!
}
input EventInput {
	title: String!
	description: String!
	price: Float!
	date: String!
	creator: ID!
}
type Query {
	events: [Event!]!
	users: [User!]!
	bookings: [Booking!]!
}
type Mutation {
	createEvent(input: EventInput ): Event!
	createUser(input: UserInput ): User!
	bookEvent(input: BookingInput): Booking!
}